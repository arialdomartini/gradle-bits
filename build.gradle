
task hello(dependsOn: ['intro','secondIntro']) {
    doLast {
        println 'Hello, world!'
    }
}

task intro {
    doLast {
        println 'Gradle buidl just started...'
    }
}

task secondIntro {
    doLast {
        println "Let's perform the other tasks"
    }
}

task shortHello << {
    println 'Hello, world!'
}

task upperCase << {
    String aString = 'lowercase'
    println String.format("Original: %s", aString)
    println String.format("Upper case: %s", aString.toUpperCase())
}

task count << {
    10.times {
        println "$it"
    }
}

3.times { n ->
    task "taskNumber${n}" << {
        println "I'm the task number ${n}"
    }
}


["Foo", "Bar", "Baz"].eachWithIndex { name, i ->
    task "taskNamed${name}" << {
        println "You just called the task taskNamed${name}"
    }
}

taskNamedFoo.dependsOn(intro)


task metaprogramming  {
    doFirst {
        println "one"
    }
}

metaprogramming << {
    println "two"
}

metaprogramming << {
    println "three"
}


/*
task withProperties << {
    println "Property foo = ${ext.foo}"
}

setValue = { ext.foo = "some value" }
withProperties.doFirst(setValue)
*/


task listFilesHere {
    def files = file('.').listFiles().sort()
    printList(files)
}

private File[] printList(File[] files) {
    files.each({ File file ->
        println file.absolutePath
    })
}


task build_dev << {
    println "Building version  $version"
}

task build_release(dependsOn: 'build_dev') << {
    println 'Building release version'
}

gradle.taskGraph.whenReady {taskGraph ->
    if (taskGraph.hasTask(build_release)) {
        version = '1.0-PROD'
    } else {
        version = '1.0-DEV'
    }
}